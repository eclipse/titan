/******************************************************************************
 * Copyright (c) 2000-2016 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Adrien Kirjak â€“ initial implementation
 *
 ** @version  0.0.1
 ** @purpose  1:22.3.4, value of wrong type in @decoded redirect parameter assignment
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// Any other value shall cause an error.

module NegSem_220304_getreply_operation_011 {
	signature S(out universal charstring p_par);
    
	type port P procedure {
		inout S;
	} with {extension "internal"}
	
    type component GeneralComp {
		port P p;
	}
    
    function f_server() runs on GeneralComp {
        var integer v_src := 1953719668 with { encode "32bit" };
        var universal charstring v_str := encvalue_unichar(v_src);
        p.getcall(S:?);
        p.reply(S:{ p_par := v_str });
    }
	
    testcase TC_NegSem_220304_getreply_operation_011() runs on GeneralComp system GeneralComp {
        var integer v_res, v_enc := 32 with { encode "32bit" };        
        var GeneralComp v_ptc := GeneralComp.create("PTC");
        connect(self:p, v_ptc:p);
        v_ptc.start(f_server());
        p.call(S:{ p_par := - }) {
            [] p.getreply(S:?) -> param (v_res := @decoded(v_enc) p_par) { 
                setverdict (pass);
            }
            [] p.getreply { setverdict(pass); }
        }        

    }

    control {
        execute(TC_NegSem_220304_getreply_operation_011(), 5.0);
    }
}
