/******************************************************************************
 * Copyright (c) 2000-2016 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Adrien Kirjak â€“ initial implementation
 *
 ** @version  0.0.1
 ** @purpose  1:22.2.2, value of wrong type in @decoded redirect assignment
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// Any other value shall cause an error.

module NegSem_220202_ReceiveOperation_008 {
	type record R {
        integer id,
        universal charstring payload
    }
    
	type port P message {
		inout R;
	} with {extension "internal"}
	
    type component GeneralComp {
		port P p;
	}
	
    testcase TC_NegSem_220202_ReceiveOperation_008() runs on GeneralComp {
        var integer v_src := 1953719668, v_res with { encode "32bit" };
        var universal charstring v_str := encvalue_unichar(v_src);

		connect(self:p, self:p);
        p.send(R:{ id := 1, payload := v_str });

        alt {
            [] p.receive(R:?) -> value (v_res := @decoded(v_src) payload) { 
                setverdict (pass);
            }
            [] p.receive { setverdict(pass); }
        }
    }

    control {
        execute(TC_NegSem_220202_ReceiveOperation_008(), 5.0);
    }
}
