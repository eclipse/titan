/******************************************************************************
 * Copyright (c) 2000-2016 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Adrien Kirjak â€“ initial implementation
 *
 ** @version  0.0.1
 ** @purpose  1:22.2.2, @decoded redirect assignment of a bitstring field
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

// The following requirements are tested:
// When assigning individual fields of a message, encoded payload fields can be 
// decoded prior to assignment using the @decoded modifier. In this case, the 
// referenced field on the right hand sided of the assignment shall be one of the 
// bitstring, hexstring, octetstring, charstring or universal charstring types. It 
// shall be decoded into a value of the same type as the variable on the left hand 
// side of the assignment.

module Sem_220202_ReceiveOperation_011 {
	type record R {
        integer id,
        bitstring payload
    }
    
	type port P message {
		inout R;
	} with {extension "internal"}

    type component GeneralComp {
		port P p;
	}
	
    testcase TC_Sem_220202_ReceiveOperation_011() runs on GeneralComp {
        var charstring v_src := "abc", v_res;        
        var bitstring v_bs := encvalue(v_src);

		connect(self:p, self:p);
        p.send(R:{ id := 1, payload := v_bs });

        alt {
            [] p.receive(R:?) -> value (v_res := @decoded payload) { 
                if (v_res == "abc") { setverdict (pass); }
                else { setverdict(fail); }
            }
            [] p.receive { setverdict(fail); }
        }
    }

    control {
        execute(TC_Sem_220202_ReceiveOperation_011(), 5.0);
    }
}
