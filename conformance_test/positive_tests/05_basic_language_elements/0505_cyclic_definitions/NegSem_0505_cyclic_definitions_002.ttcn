/******************************************************************************
 * Copyright (c) 2000-2016 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Adrien Kirjak â€“ initial implementation
 *
 ** @version  0.0.1
 ** @purpose  1:5.5, Verify that an error is detected when a forbidded cyclic reference occurs in cyclic import
 ** @verdict  pass reject
 ***************************************************/

// The following requirements are tested:
// Direct and indirect cyclic definitions are not allowed with the exception of the 
// following cases:
// a) for recursive type definitions (see clause 6.2);
// b) function and altstep definitions (i.e. recursive function or altstep calls);
// c) cyclic import definitions, if the imported definitions only form allowed cyclic 
// definitions.
// The test is a modification of example 1 from the chapter 5.5 that defines both constants
// in different modules.

module NegSem_0505_cyclic_definitions_002 {
	import from NegSem_0505_cyclic_definitions_002_import { const c_test1 }
	type record ARecordType { integer a, integer b };
	const ARecordType c_test2 := { 1 , c_test1.b}; // c_test2 refers to c_test1
}


