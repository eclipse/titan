/******************************************************************************
* Copyright (c) 2000-2016 Ericsson Telecom AB
*
* XSD to TTCN-3 Translator
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Balasko, Jeno
*   Szabo, Bence Janos
*
******************************************************************************/
//
//  File:          http_www_example_org_nillable_in_nillable_extension_e.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Thu Jun  4 16:22:29 2014
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- nillable_in_nillable_extension.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "http://www.example.org/nillable/in/nillable/extension/e" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module http_www_example_org_nillable_in_nillable_extension {


import from XSD all;


type record SeqNillable
{
	XSD.Integer number optional,
	record length(0 .. 32) of record {
		XSD.Integer content optional
	} nillableNumber_list
}
with {
  variant (number) "name as capitalized";
  variant (nillableNumber_list) "untagged";
  variant (nillableNumber_list[-]) "name as 'NillableNumber'";
  variant (nillableNumber_list[-]) "useNil";
};


type record NillableInRecord
{
	XSD.Boolean allow_do_not,
	record {
		XSD.Integer phoneNumber optional,
		record {
			XSD.Integer number optional,
			record length(0 .. 32) of record {
				XSD.Integer content optional
			} nillableNumber_list
		} content optional
	} seqNillableExtended optional
}
with {
  variant "element";
  variant (allow_do_not) "name as 'allow-do-not'";
  //variant (allow_do_not) "text 'true' as '1'";
  //variant (allow_do_not) "text 'false' as '0'";
  variant (seqNillableExtended) "name as capitalized";
  variant (seqNillableExtended) "useNil";
  variant (seqNillableExtended.phoneNumber) "name as capitalized";
  variant (seqNillableExtended.phoneNumber) "attribute";
  variant (seqNillableExtended.content.number) "name as capitalized";
  variant (seqNillableExtended.content.nillableNumber_list) "untagged";
  variant (seqNillableExtended.content.nillableNumber_list[-]) "name as 'NillableNumber'";
  variant (seqNillableExtended.content.nillableNumber_list[-]) "useNil";
};


}
with {
  encode "XML";
  variant "namespace as 'http://www.example.org/nillable/in/nillable/extension' prefix 'ns12'";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
  variant "elementFormQualified";
}
